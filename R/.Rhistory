rs$gamma4 = r4$gamma
rs$gamma5 = r5$gamma
rs$gamma6 = r6$gamma
rs$gamma7 = r7$gamma
head(rs)
rs$gamma_mean = apply(rs[,c("gamma","gamma2", "gamma3", "gamma4", "gamma5", "gamma6", "gamma7")],1,mean)
head(rs)
str(rs)
rs = rs[-c(4:9)]
head(rs)
rs = rs[-c(2)]
names(rs) = c('contig:position', 'mape','gamma')
head(rs)
rs$mape = abs(rs$mape)
rs$gamma = abs(rs$gamma)
rs = rs[order(rs$mape, decreasing=T),]
head(rs)
write.table(rs, file='mosiMAPE.txt', row.names=F, col.names=T, quote=F)
mosi <- read.table('mosiMAPE.txt',header=T)
head(mosi)
par(mar=c(6,6,3,1))
par(font.axis = 2, cex.axis=2, family = 'Times New Roman')
plot(mosi$mape ~ mosi$contig, xlab='',ylab='',cex.lab=2, cex.axis=2, font.axis=2, font.lab=2, lwd=2,family='Times New Roman')
title(xlab="Scaffold Number",ylab="Model Average Point Estimate", line=4,cex.lab=2,font.lab=2,family='Times New Roman')
par(mar=c(5,5,3,1))
par(font.axis = 2, cex.axis=2, family = 'Times New Roman')
plot(mosi$mape ~ mosi$contig, xlab='',ylab='',cex.lab=2, cex.axis=2, font.axis=2, font.lab=2, lwd=2,family='Times New Roman')
title(xlab="Contig Number",ylab="Model Average Point Estimate", line=4,cex.lab=2,font.lab=2,family='Times New Roman')
par(mar=c(4,4,3,1))
par(font.axis = 2, cex.axis=2, family = 'Times New Roman')
plot(mosi$mape ~ mosi$contig, xlab='',ylab='',cex.lab=2, cex.axis=2, font.axis=2, font.lab=2, lwd=2,family='Times New Roman')
title(xlab="Contig Number",ylab="Model Average Point Estimate", line=4,cex.lab=2,font.lab=2,family='Times New Roman')
par(mar=c(6,6,3,1))
par(font.axis = 2, cex.axis=2, family = 'Times New Roman')
plot(mosi$mape ~ mosi$contig, xlab='',ylab='',cex.lab=2, cex.axis=2, font.axis=2, font.lab=2, lwd=2,family='Times New Roman')
title(xlab="Scaffold Number",ylab="Model Average Point Estimate", line=4,cex.lab=2,font.lab=2,family='Times New Roman')
par(mar=c(6,6,3,1))
par(font.axis = 2, cex.axis=2, family = 'Times New Roman')
plot(ppapmal$mape ~ ppapmal$scaffold, xlab='',ylab='',cex.lab=2, cex.axis=2, font.axis=2, font.lab=2, lwd=2,family='Times New Roman')
title(xlab="Contig Number",ylab="Model Average Point Estimate", line=4,cex.lab=2,font.lab=2,family='Times New Roman')
par(mar=c(6,6,3,1))
par(font.axis = 2, cex.axis=2, family = 'Times New Roman')
plot(mosi$mape ~ mosi$contig, xlab='',ylab='',cex.lab=2, cex.axis=2, font.axis=2, font.lab=2, lwd=2,family='Times New Roman')
title(xlab="Contig Number",ylab="Model Average Point Estimate", line=4,cex.lab=2,font.lab=2,family='Times New Roman')
par(mar=c(6,6,3,1))
par(font.axis = 2, cex.axis=2, family = 'Times New Roman')
plot(mosi$mape ~ mosi$gamma, xlab='',ylab='',cex.lab=2, cex.axis=2, font.axis=2, font.lab=2, lwd=2,family='Times New Roman')
title(xlab="Posterior Inclusion Probability",ylab="Model Average Point Estimate", line=4,cex.lab=2,font.lab=2,family='Times New Roman')
hyp <- read.table('mosi.hyp.txt',header=T)
hyp = hyp[ -c(1,3,5) ]
hyp = na.omit(hyp)
colnames(hyp) <- c('pve','pge','n_gamma')
head(hyp)
hyp$pve = as.numeric(as.character(hyp$pve))
hyp$pge = as.numeric(as.character(hyp$pge))
hyp$n_gamma = as.numeric(as.character(hyp$n_gamma))
quantile(hyp$pve)
HPDinterval(as.mcmc(hyp$pve),prob=.95)
quantile(hyp$pge)
HPDinterval(as.mcmc(hyp$pge),prob=.95)
quantile(hyp$n_gamma)
HPDinterval(as.mcmc(hyp$n_gamma),prob=.95)
library(coda)
quantile(hyp$pve)
HPDinterval(as.mcmc(hyp$pve),prob=.95)
quantile(hyp$pge)
HPDinterval(as.mcmc(hyp$pge),prob=.95)
quantile(hyp$n_gamma)
HPDinterval(as.mcmc(hyp$n_gamma),prob=.95)
head(mape)
mape <- read.table('mosiMAPE.txt',header=T)
head(mape)
head(mape, 20)
setwd("/Users/spencerhudson/Desktop/Mosquito Insecticide Resistance")
pheno <- read.table('mosipheno.txt', header=F)
?which
which(pheno == 1)
pheno$V2 <- pheno$V1
pheno$V3 <- pheno$V1
pheno$V4 <- pheno$V1
pheno$V5 <- pheno$V1
head(pheno)
which(pheno$V2 != NA)
which(is.na(pheno$V2 == F))
(is.na(pheno$V2 == F)
)
pheno$V1[sample(seq(pheno$V1), 38)] <- NA
pheno
pheno$V2[sample(seq(is.na(pheno$V1 == F)), 38)] <- NA
pheno
which(pheno$V2 == 'NA')
pheno <- read.table('mosipheno.txt', header=F)
pheno$V2 <- pheno$V1
pheno$V3 <- pheno$V1
pheno$V4 <- pheno$V1
pheno$V5 <- pheno$V1
pheno$V1[sample(seq(pheno$V1), 38)] <- NA
which(pheno$V1 == 0 & pheno$V1 == 1)
pheno
which(pheno$V1 == 0)
which(pheno$V1 == 0 | pheno$V1 == 1)
pheno$V2[sample(seq(which(pheno$V1 == 0 | pheno$V1 == 1)), 38)] <- NA
pheno
pheno <- read.table('mosipheno.txt', header=F)
pheno$V2 <- pheno$V1
pheno$V3 <- pheno$V1
pheno$V4 <- pheno$V1
pheno$V5 <- pheno$V1
pheno$V1[sample(seq(pheno$V1), 38)] <- NA
pheno$V2[sample(which(pheno$V1 == 0 | pheno$V1 == 1), 38)] <- NA
pheno
pheno <- read.table('mosipheno.txt', header=F)
pheno$V2 <- pheno$V1
pheno$V3 <- pheno$V1
pheno$V4 <- pheno$V1
pheno$V5 <- pheno$V1
pheno$V1[sample(pheno$V1, 38)] <- NA
pheno
pheno <- read.table('mosipheno.txt', header=F)
pheno$V2 <- pheno$V1
pheno$V3 <- pheno$V1
pheno$V4 <- pheno$V1
pheno$V5 <- pheno$V1
pheno$V1[sample(seq(pheno$V1), 38)] <- NA
pheno$V2[sample(which(pheno$V1 == 0 | pheno$V1 == 1), 38)] <- NA
pheno$V3[sample(seq(which(pheno$V2 == 0 | pheno$V2 == 1)), 38)] <- NA
pheno$V4[sample(seq(which(pheno$V3 == 0 | pheno$V3 == 1)), 38)] <- NA
pheno$V5[sample(seq(which(pheno$V4 == 0 | pheno$V4 == 1)), 38)] <- NA
pheno
pheno <- read.table('mosipheno.txt', header=F)
pheno$V2 <- pheno$V1
pheno$V3 <- pheno$V1
pheno$V4 <- pheno$V1
pheno$V5 <- pheno$V1
## Generate random NA's for 20% of the phenotypes for each vector
pheno$V1[sample(seq(pheno$V1), 38)] <- NA
pheno$V2[sample(which(pheno$V1 == 0 | pheno$V1 == 1), 38)] <- NA
pheno$V3[sample(which(pheno$V2 == 0 | pheno$V2 == 1), 38)] <- NA
pheno$V4[sample(which(pheno$V3 == 0 | pheno$V3 == 1), 38)] <- NA
pheno$V5[sample(which(pheno$V4 == 0 | pheno$V4 == 1), 38)] <- NA
pheno
pheno <- read.table('mosipheno.txt', header=F)
pheno$V2 <- pheno$V1
pheno$V3 <- pheno$V1
pheno$V4 <- pheno$V1
pheno$V5 <- pheno$V1
## Generate random NA's for 20% of the phenotypes for each vector
pheno$V1[sample(seq(pheno$V1), 38)] <- NA
pheno$V2[sample(which(pheno$V1 == 0 | pheno$V1 == 1), 38)] <- NA
pheno$V3[sample(which(pheno$V2 == 0 | pheno$V2 == 1), 38)] <- NA
pheno$V4[sample(which(pheno$V3 == 0 | pheno$V3 == 1), 38)] <- NA
pheno$V5[sample(which(pheno$V4 == 0 | pheno$V4 == 1), 38)] <- NA
pheno
pheno <- read.table('mosipheno.txt', header=F)
pheno$V2 <- pheno$V1
pheno$V3 <- pheno$V1
pheno$V4 <- pheno$V1
pheno$V5 <- pheno$V1
## Generate random NA's for 20% of the phenotypes for each vector
pheno$V1[sample(seq(pheno$V1), 38)] <- NA
pheno$V2[sample(which(pheno$V1 == 0 | pheno$V1 == 1), 38)] <- NA
pheno
which(pheno$V2 == 0 | pheno$V2 == 1)
pheno$V3[sample(which(pheno$V2 == 0 | pheno$V2 == 1), 38)] <- NA
pheno
pheno <- read.table('mosipheno.txt', header=F)
pheno$V2 <- pheno$V1
pheno$V3 <- pheno$V1
pheno$V4 <- pheno$V1
pheno$V5 <- pheno$V1
pheno$V6 <- pheno$V1
## Generate random NA's for 20% of the phenotypes for each vector
pheno$V1[sample(seq(pheno$V1), 38)] <- NA
pheno$V2[sample(which(pheno$V1 == 0 | pheno$V1 == 1), 38)] <- NA
pheno$V1[which(pheno$V2 != 0 | pheno$V2 != 1)] <- NA
pheno$V3[sample(which(pheno$V1 == 0 | pheno$V1 == 1), 38)] <- NA
pheno
pheno <- read.table('mosipheno.txt', header=F)
pheno$V2 <- pheno$V1
pheno$V3 <- pheno$V1
pheno$V4 <- pheno$V1
pheno$V5 <- pheno$V1
pheno$V6 <- pheno$V1
## Generate random NA's for 20% of the phenotypes for each vector
pheno$V1[sample(seq(pheno$V1), 38)] <- NA
pheno$V2[sample(which(pheno$V1 == 0 | pheno$V1 == 1), 38)] <- NA
pheno
pheno <- read.table('mosipheno.txt', header=F)
pheno$V2 <- pheno$V1
pheno$V3 <- pheno$V1
pheno$V4 <- pheno$V1
pheno$V5 <- pheno$V1
## Generate random NA's for 20% of the phenotypes for each vector
pheno$V1[sample(seq(pheno$V1), 38)] <- NA
pheno$V6 <- pheno$V1
pheno
pheno <- read.table('mosipheno.txt', header=F)
pheno$V2 <- pheno$V1
pheno$V3 <- pheno$V1
pheno$V4 <- pheno$V1
pheno$V5 <- pheno$V1
## Generate random NA's for 20% of the phenotypes for each vector
pheno$V1[sample(seq(pheno$V1), 38)] <- NA
pheno$V6 <- pheno$V1
pheno
pheno$V2[sample(which(pheno$V1 == 0 | pheno$V1 == 1), 38)] <- NA
pheno$V1[which(pheno$V2 != 0 | pheno$V2 != 1)] <- NA
pheno$V3[sample(which(pheno$V1 == 0 | pheno$V1 == 1), 38)] <- NA
pheno$V1[which(pheno$V3 != 0 | pheno$V3 != 1)] <- NA
pheno$V4[sample(which(pheno$V1 == 0 | pheno$V1 == 1), 38)] <- NA
pheno$V1[which(pheno$V4 != 0 | pheno$V4 != 1)] <- NA
pheno$V5[sample(which(pheno$V1 == 0 | pheno$V1 == 1), 38)] <- NA
pheno$V1[which(pheno$V5 != 0 | pheno$V5 != 1)] <- NA
pheno
pheno <- read.table('mosipheno.txt', header=F)
pheno$V2 <- pheno$V1
pheno$V3 <- pheno$V1
pheno$V4 <- pheno$V1
pheno$V5 <- pheno$V1
## Generate random NA's for 20% of the phenotypes for each vector
pheno$V1[sample(seq(pheno$V1), 38)] <- NA
pheno$V6 <- pheno$V1
pheno
pheno$V2[sample(which(pheno$V1 == 0 | pheno$V1 == 1), 38)] <- NA
pheno
which(pheno$V2 != 0 | pheno$V2 != 1)
which(is.na(pheno$V2))
pheno <- read.table('mosipheno.txt', header=F)
pheno$V2 <- pheno$V1
pheno$V3 <- pheno$V1
pheno$V4 <- pheno$V1
pheno$V5 <- pheno$V1
## Generate random NA's for 20% of the phenotypes for each vector
pheno$V1[sample(seq(pheno$V1), 38)] <- NA
pheno$V6 <- pheno$V1
pheno$V2[sample(which(pheno$V1 == 0 | pheno$V1 == 1), 38)] <- NA
pheno$V1[which(is.na(pheno$V2))] <- NA
pheno$V3[sample(which(pheno$V1 == 0 | pheno$V1 == 1), 38)] <- NA
pheno$V1[which(is.na(pheno$V3))] <- NA
pheno$V4[sample(which(pheno$V1 == 0 | pheno$V1 == 1), 38)] <- NA
pheno$V1[which(is.na(pheno$V4))] <- NA
pheno$V5[sample(which(pheno$V1 == 0 | pheno$V1 == 1), 38)] <- NA
pheno$V1[which(is.na(pheno$V4))] <- NA
pheno
pheno <- pheno[,-c(1)]
pheno
write.table(pheno, file = 'NA_pheno.txt', quote=F, col.names = F, row.names = F)
setwd("/Users/spencerhudson/Desktop/natdb/R")
data <- read.table('https://datadryad.org/bitstream/handle/10255/dryad.34389/21%20species%20means.txt?sequence=1',header=T)
head(data)
data <- read.table('https://datadryad.org/bitstream/handle/10255/dryad.34389/21%20species%20means.txt?sequence=1',header=T)
data <- read.table('https://datadryad.org/bitstream/handle/10255/dryad.34389/21%20species%20means.txt?sequence=1')
data <- read.table('https://datadryad.org/bitstream/handle/10255/dryad.34389/21%20species%20means.txt?sequence=1',header=T,sep = '/t')
head(data)
data <- read.table('https://datadryad.org/bitstream/handle/10255/dryad.34389/21%20species%20means.txt?sequence=1',header=T,sep = ' ')
data <- read.table('https://datadryad.org/bitstream/handle/10255/dryad.34389/21%20species%20means.txt?sequence=1',header=T,sep = '/t')
getwd()
data <- read.table('https://datadryad.org/bitstream/handle/10255/dryad.34389/21%20species%20means.txt?sequence=1',header=T,sep = '/t')
data <- read.delim('https://datadryad.org/bitstream/handle/10255/dryad.34389/21%20species%20means.txt?sequence=1',header=T,sep = '/t')
data <- read.delim('https://datadryad.org/bitstream/handle/10255/dryad.34389/21%20species%20means.txt?sequence=1',header=T,sep = ' ')
head(data)
data <- read.delim('https://datadryad.org/bitstream/handle/10255/dryad.34389/21%20species%20means.txt?sequence=1',header=T,sep = '  ')
data <- read.delim('https://datadryad.org/bitstream/handle/10255/dryad.34389/21%20species%20means.txt?sequence=1',header=T,sep = '\t')
head(data)
data <- read.table('https://datadryad.org/bitstream/handle/10255/dryad.34389/21%20species%20means.txt?sequence=1',header=T,sep = '\t')
head(data)
str(data)
units <- c('mm')
test<-.df.melt(data, "Species", units=units)
units <- c(rep('mm',20)
test<-.df.melt(data, "Species", units=units)
}
# .wright.2004 <- function(...){
#     raw <- read.xls("http://www.nature.com/nature/journal/v428/n6985/extref/nature02403-s2.xls", as.is=TRUE, skip=7)
#     raw$metadata <- with(raw, paste(Dataset,BIOME,sep="_"))
#     raw <- raw[,!names(raw) %in% c("Code","Dataset","BIOME","X","X.1","X.2","X.3","X.4","X.5","X.6")]
#     raw$Species <- gsub(" ", "_", tolower(raw$Species))
#     output <- .df.melt(raw, "Species")
#     class(output) <- "natdb"
#     return(output)
# }
.zanne.2014 <- function(...){
wood <- read.csv("http://datadryad.org/bitstream/handle/10255/dryad.59002/GlobalWoodinessDatabase.csv?sequence=1")
names(wood)[3] <- "metadata"
phenol <- read.csv("http://datadryad.org/bitstream/handle/10255/dryad.59005/GlobalLeafPhenologyDatabase.csv?sequence=1")
output <- merge(wood, phenol, by.x="gs", by.y="Binomial", all.x=TRUE, all.y=TRUE)
output$gs <- gsub(" ", "_", tolower(output$gs))
return(.df.melt(output, "gs"))
}
.hintze.2013 <- function(...){
data <- read.csv("http://www.sciencedirect.com/science/MiamiMultiMediaURL/1-s2.0-S1433831913000218/1-s2.0-S1433831913000218-mmc1.txt/273233/html/S1433831913000218/6bd947d6c0ccb7edd11cd8bf73648447/mmc1.txt", sep=";", as.is=TRUE)
data$metadata <- seq_len(nrow(data))
data$name <- sapply(strsplit(tolower(sanitize_text(data$name)),split=" "), function(x) paste(x[1:2], collapse="_"))
data <- data[,!names(data) %in% c("comment","family","citation_total","citation_prop_ane","citation_prop_dyso","citation_prop_endo","citation_prop_epi","citation_prop_hem","citation_prop_hydro","citation_prop_other")]
return(.df.melt(data, "name"))
}
.bezeng.2015 <- function(...){
data <- read.xls("http://datadryad.org/bitstream/handle/10255/dryad.84999/Table%20S2.xls?sequence=1", as.is=TRUE)
data$metadata <- sapply(strsplit(data$Species, "_"), function(x) x[3])
data$Species <- sapply(strsplit(data$Species, "_"), function(x) paste(x, collapse="_"))
return(.df.melt(data, "Species"))
}
# Elton traits
.wilman.2014a  <- function(...){
data <- read.delim(ft_get_si("E095-178", "BirdFuncDat.txt", "esa_archives"))
data <- data[,-c(23,34)]
units <- sample(c("SpecID", "PassNonPass", "IOCOrder", "BLFamilyLatin", "BLFamilyEnglish", "BLFamSequID", "Taxo", "Scientific", "English", "Diet.Inv", "Diet.Vend", "Diet.Vect", "Diet.Vfish", "Diet.Vunk", "Diet.Scav", "Diet.Fruit", "Diet.Nect", "Diet.Seed", "Diet.PlantO", "Diet.5Cat", "Diet.Source", "Diet.Certainty", "ForStrat.watbelowsurf", "ForStrat.wataroundsurf", "ForStrat.ground", "ForStrat.understory", "ForStrat.midhigh", "ForStrat.canopy", "ForStrat.aerial", "PelagicSpecialist", "ForStrat.Source", "ForStrat.SpecLevel", "Nocturnal", "BodyMass.Value", "BodyMass.Source", "BodyMass.SpecLevel", "BodyMass.Comment", "Record.Comment"),length(names(data))-1,TRUE)
return(.df.melt(data, "Scientific"))
}
.wilman.2014b  <- function(...){
data <- read.delim(ft_get_si("E095-178", "MamFuncDat.txt", "esa_archives"))
data <- data[,-c(1)]
units <- sample(c("Scientific","MSWFamilyLatin","Diet.Inv","Diet.Vend","Diet.Vect","Diet.Vfish","Diet.Vunk","Diet.Scav","Diet.Fruit","Diet.Nect","Diet.Seed","Diet.PlantO","Diet.Source","Diet.Certainty","ForStrat.Value","ForStrat.Certainty","ForStrat.Comment","Activity.Nocturnal","Activity.Crepuscular","Activity.Diurnal","Activity.Source","Activity.Certainty","BodyMass.Value","BodyMass.Source","BodyMass.SpecLevel"),length(names(data))-1,TRUE)
return(.df.melt(data, "Scientific"))
}
units <- c(rep('mm',20)
test<-.df.melt(data, "Species", units=units)
}
# .wright.2004 <- function(...){
#     raw <- read.xls("http://www.nature.com/nature/journal/v428/n6985/extref/nature02403-s2.xls", as.is=TRUE, skip=7)
#     raw$metadata <- with(raw, paste(Dataset,BIOME,sep="_"))
#     raw <- raw[,!names(raw) %in% c("Code","Dataset","BIOME","X","X.1","X.2","X.3","X.4","X.5","X.6")]
#     raw$Species <- gsub(" ", "_", tolower(raw$Species))
#     output <- .df.melt(raw, "Species")
#     class(output) <- "natdb"
#     return(output)
# }
.zanne.2014 <- function(...){
wood <- read.csv("http://datadryad.org/bitstream/handle/10255/dryad.59002/GlobalWoodinessDatabase.csv?sequence=1")
names(wood)[3] <- "metadata"
phenol <- read.csv("http://datadryad.org/bitstream/handle/10255/dryad.59005/GlobalLeafPhenologyDatabase.csv?sequence=1")
output <- merge(wood, phenol, by.x="gs", by.y="Binomial", all.x=TRUE, all.y=TRUE)
output$gs <- gsub(" ", "_", tolower(output$gs))
return(.df.melt(output, "gs"))
}
.hintze.2013 <- function(...){
data <- read.csv("http://www.sciencedirect.com/science/MiamiMultiMediaURL/1-s2.0-S1433831913000218/1-s2.0-S1433831913000218-mmc1.txt/273233/html/S1433831913000218/6bd947d6c0ccb7edd11cd8bf73648447/mmc1.txt", sep=";", as.is=TRUE)
data$metadata <- seq_len(nrow(data))
data$name <- sapply(strsplit(tolower(sanitize_text(data$name)),split=" "), function(x) paste(x[1:2], collapse="_"))
data <- data[,!names(data) %in% c("comment","family","citation_total","citation_prop_ane","citation_prop_dyso","citation_prop_endo","citation_prop_epi","citation_prop_hem","citation_prop_hydro","citation_prop_other")]
return(.df.melt(data, "name"))
}
.bezeng.2015 <- function(...){
data <- read.xls("http://datadryad.org/bitstream/handle/10255/dryad.84999/Table%20S2.xls?sequence=1", as.is=TRUE)
data$metadata <- sapply(strsplit(data$Species, "_"), function(x) x[3])
data$Species <- sapply(strsplit(data$Species, "_"), function(x) paste(x, collapse="_"))
return(.df.melt(data, "Species"))
}
# Elton traits
.wilman.2014a  <- function(...){
data <- read.delim(ft_get_si("E095-178", "BirdFuncDat.txt", "esa_archives"))
data <- data[,-c(23,34)]
units <- sample(c("SpecID", "PassNonPass", "IOCOrder", "BLFamilyLatin", "BLFamilyEnglish", "BLFamSequID", "Taxo", "Scientific", "English", "Diet.Inv", "Diet.Vend", "Diet.Vect", "Diet.Vfish", "Diet.Vunk", "Diet.Scav", "Diet.Fruit", "Diet.Nect", "Diet.Seed", "Diet.PlantO", "Diet.5Cat", "Diet.Source", "Diet.Certainty", "ForStrat.watbelowsurf", "ForStrat.wataroundsurf", "ForStrat.ground", "ForStrat.understory", "ForStrat.midhigh", "ForStrat.canopy", "ForStrat.aerial", "PelagicSpecialist", "ForStrat.Source", "ForStrat.SpecLevel", "Nocturnal", "BodyMass.Value", "BodyMass.Source", "BodyMass.SpecLevel", "BodyMass.Comment", "Record.Comment"),length(names(data))-1,TRUE)
return(.df.melt(data, "Scientific"))
}
.wilman.2014b  <- function(...){
data <- read.delim(ft_get_si("E095-178", "MamFuncDat.txt", "esa_archives"))
data <- data[,-c(1)]
units <- sample(c("Scientific","MSWFamilyLatin","Diet.Inv","Diet.Vend","Diet.Vect","Diet.Vfish","Diet.Vunk","Diet.Scav","Diet.Fruit","Diet.Nect","Diet.Seed","Diet.PlantO","Diet.Source","Diet.Certainty","ForStrat.Value","ForStrat.Certainty","ForStrat.Comment","Activity.Nocturnal","Activity.Crepuscular","Activity.Diurnal","Activity.Source","Activity.Certainty","BodyMass.Value","BodyMass.Source","BodyMass.SpecLevel"),length(names(data))-1,TRUE)
return(.df.melt(data, "Scientific"))
}
units <- c(rep('mm',20)
units <- c(rep('mm',20))
units <- c(rep('mm',20))
test<-.df.melt(data, "Species", units=units)
head(test)
.kolbe.2011 <- function(...){
data <- read.table('https://datadryad.org/bitstream/handle/10255/dryad.34389/21%20species%20means.txt?sequence=1',header=T,sep = '\t')
units <- c(rep('mm',20))
data<-.df.melt(data, "Species", units=units)
data$character$units <- NA
return(data)
}
.kolbe.2011()
data <- read.csv('https://datadryad.org/bitstream/handle/10255/dryad.115900/winchell_evol_phenshifts.csv?sequence=1')
head(data)
data <- data[,-c(1:2)]
head(data)
data$species <- 'A.cristatellus'
data <- read.csv('https://datadryad.org/bitstream/handle/10255/dryad.115900/winchell_evol_phenshifts.csv?sequence=1')
data <- data[,-c(1:2,15)]
data$species <- 'A.cristatellus'
head(data)
data$flags
data <- read.csv('https://datadryad.org/bitstream/handle/10255/dryad.115900/winchell_evol_phenshifts.csv?sequence=1')
data <- data[,-c(1:2,15:16)]
data$species <- 'A.cristatellus'
head(data)
units <- c(rep('C',3),'%','cm','cm','g',rep('mm',15), rep(NA, 3))
data<-.df.melt(data, "species", units=units)
head(data)
data <- read.csv('https://datadryad.org/bitstream/handle/10255/dryad.115900/winchell_evol_phenshifts.csv?sequence=1')
data <- data[,-c(1:2,15:16)]
data$species <- 'A.cristatellus'
units <- c(rep('C',3),'%','cm','cm','g',rep('mm',15), rep(NA, 3))
data<-.df.melt(data, "species", units=units)
head(data)
data <- read.csv('https://datadryad.org/bitstream/handle/10255/dryad.115900/winchell_evol_phenshifts.csv?sequence=1')
data <- data[,-c(1:2,15:16)]
data$species <- 'A.cristatellus'
head(data)
data($site)
data$site
data$Site
str(data)
data$perch.temp.C <- as.numeric(data$perch.temp.C)
units <- c(rep('C',3),'%','cm','cm','g',rep('mm',15), rep(NA, 3))
data<-.df.melt(data, "species", units=units)
head(data)
tail(data$numeric)
tail(data$numeric$variable$weight)
tail(data$numeric$variable)
which(data$numeric$variable==weight.g)
which(data$numeric$variable=='weight.g')
tail(data$numeric$variable$weight.g)
data$numeric$variable[1569]
data$numeric[1569]
data$numeric[1569,]
levels(data$numeric)
str(data$numeric)
str(data$character)
data <- read.csv('https://datadryad.org/bitstream/handle/10255/dryad.115900/winchell_evol_phenshifts.csv?sequence=1')
data <- data[,-c(1:2,15:16)]
data$species <- 'A.cristatellus'
data$perch.temp.C <- as.numeric(data$perch.temp.C)
str(data)
data <- read.csv('https://datadryad.org/bitstream/handle/10255/dryad.115900/winchell_evol_phenshifts.csv?sequence=1')
data <- data[,-c(1:2,15:16)]
data$species <- 'A.cristatellus'
str(data)
data$perch.diam.C <- as.numeric(data$perch.diam.C)
data <- read.csv('https://datadryad.org/bitstream/handle/10255/dryad.115900/winchell_evol_phenshifts.csv?sequence=1')
data <- data[,-c(1:2,15:16)]
data$species <- 'A.cristatellus'
data$perch.diam.cm <- as.numeric(data$perch.diam.cm)
units <- c(rep('C',3),'%','cm','cm','g',rep('mm',15), rep(NA, 3))
data<-.df.melt(data, "species", units=units)
data$numeric[1569,]
which(data$numeric$variable=='weight.g')
data$numeric[1883,]
head(data)
data$character$units <- NA
return(data)
head(data)
data1 <- read.csv('https://datadryad.org/bitstream/handle/10255/dryad.133488/KamathLososEvol_AnolissagreiSVL.csv?sequence=1
')
data1 <- read.csv('https://datadryad.org/bitstream/handle/10255/dryad.133488/KamathLososEvol_AnolissagreiSVL.csv?sequence=1')
data2 <- read.csv('https://datadryad.org/bitstream/handle/10255/dryad.133489/KamathLososEvol_AnolissagreiMorphAvg.csv?sequence=1')
head(data1)
head(data2)
data <- read.csv('https://datadryad.org/bitstream/handle/10255/dryad.133489/KamathLososEvol_AnolissagreiMorphAvg.csv?sequence=1')
data <- data[,-c(1)]
head(data)
data$species <- 'A.sagrei'
units <- c('mm','NA','mm','mm')
data<-.df.melt(data, "species", units=units)
head(data)
units <- c('mm','NA','mm','mm',NA)
data<-.df.melt(data, "species", units=units)
head(data)
units <- c('mm','NA','mm^2','mm',NA)
data<-.df.melt(data, "species", units=units)
data <- read.csv('https://datadryad.org/bitstream/handle/10255/dryad.133489/KamathLososEvol_AnolissagreiMorphAvg.csv?sequence=1')
data <- data[,-c(1)]
data$species <- 'A.sagrei'
units <- c('mm','NA','mm^2','mm',NA)
data<-.df.melt(data, "species", units=units)
head(data)
.kamath.2016 <- function(...){
data <- read.csv('https://datadryad.org/bitstream/handle/10255/dryad.133489/KamathLososEvol_AnolissagreiMorphAvg.csv?sequence=1')
data <- data[,-c(1)]
data$species <- 'A.sagrei'
units <- c('mm','NA','mm^2','mm',NA)
data<-.df.melt(data, "species", units=units)
data$character$units <- NA
return(data)
}
.kamath.2016()
library(gdata)
data <- read.xlsx('https://datadryad.org/bitstream/handle/10255/dryad.71706/reflectance_data.xlsx?sequence=1')
??gdata
install.packages('xlsx')
library(xlsx)
data <- read.xlsx('https://datadryad.org/bitstream/handle/10255/dryad.71706/reflectance_data.xlsx?sequence=1')
??xlsx
data <- read.xls('https://datadryad.org/bitstream/handle/10255/dryad.71706/reflectance_data.xlsx?sequence=1')
data <- read.csv('https://datadryad.org/bitstream/handle/10255/dryad.109876/HusakFergusonLovern_Anolis_training_diet_alldata.csv?sequence=1')
head(data)
data <- data[,-c(1)]
data$species <- 'A.carolinensis'
head(data)
units <- c(rep('mm',4), rep('g',3),rep('s',2),'mm','%',rep('mg'4),'psi',rep('ng/mL',2),NA,'mg',rep(NA,4))
units <- c(rep('mm',4), rep('g',3),rep('s',2),'mm','%',rep('mg'4),'psi',rep('ng/mL',2),"NA",'mg',rep(NA,4))
units <- c(rep('mm',4), rep('g',3),rep('s',2),'mm','%',rep('mg',4),'psi',rep('ng/mL',2),NA,'mg',rep(NA,4))
data<-.df.melt(data, "species", units=units)
str(data)
units <- c(NA,rep('mm',4), rep('g',3),rep('s',2),'mm','%',rep('mg',4),'psi',rep('ng/mL',2),NA,'mg',rep(NA,4))
data<-.df.melt(data, "species", units=units)
data$character$units <- NA
head(data)
data <- read.csv('https://datadryad.org/bitstream/handle/10255/dryad.109876/HusakFergusonLovern_Anolis_training_diet_alldata.csv?sequence=1')
data <- data[,-c(1)]
data$species <- 'A.carolinensis'
units <- c('NA',rep('mm',4), rep('g',3),rep('s',2),'mm','%',rep('mg',4),'psi',rep('ng/mL',2),'NA','mg',rep(NA,4))
data<-.df.melt(data, "species", units=units)
data$character$units <- NA
head(data)
tail(data)
data <- read.csv('https://datadryad.org/bitstream/handle/10255/dryad.109876/HusakFergusonLovern_Anolis_training_diet_alldata.csv?sequence=1')
str(data)
library(gdata)
installXLSXsupport(perl = "perl", verbose = FALSE)
